Deðiþkenler
*** C# Programlama Dilinde ön tanýmlý 15 tane tip vardir...

Deðiþkenler
1-Deger Tipli Deðiþkenler Value Types
   byte    1
   sbyte   1(+,-)
   short   2(+,-)
   ushort  2
   int     4(+,-) ***
   uint    4
   long    8(+,-)
   ulong   8
   -----------
   float   32 bit
   double  64 bit ***
   decimal 128 bit
   -----------
   bool    1 bit 
   char    2 byte 'A'
2-Referans Tipli Deðiþkenler Reference Type
   string : Karakter katarý(dizi)....
   object : OOP

1 bit =[0,1]
1 byte =8 bit

       00000000 =>(Min) =0
       11111111 =>(Max) =255
       
//Değişken kullanma
int sayi;
bool kontrol;
char karakter = 'A';
double fiyat = 55.90;
string isim = "Cevdet";
int s1, s2;
int s3=1, s4=3;
sayi = 12;
Console.WriteLine(sayi);


var d1 = 12;
var d2 = "Cevdet";

var d6 = 44.55;
var d3 = 44.55M;
var d4 = 44.55F;

var ad = Console.ReadLine();

//----------------------------------------------------------------
Mert Hocadan gelen;

//Ctrl-kc Yorum satırına alma
    //Ctrl-ku Yorum satırından çıkarma


    //Degişken Nedir? 
    // Değişkenleri en sabit şekilde verilerin deponlandığı yerler olarak tanımlarız.
    //Değişkenlerin içine verilerimizi kaydedebiliriz veya değişkenlerimizin içindeki verileri c# programındaki işlemlerimiz için kullanabiliriz.

    //Değişkenlerin Kuralları 
    //Kullamayacagımız değişkenleri asla tanımlamamalıyız.
    //Deger aralıklarına göre dogru veri tipi secmeye özen göstermeliyiz.
    //Bir değilenin adi asla iki kelime olamaz. Eger iki kelime ise mutalaka (_), (-) özel karakter ile birbirinden ayrılmalıdır.
    //Değişkenlerin adları asla sayı ile başlayamaz. Yalnız sayı ile bitebilir.

    static void Main(string[] args)
    {
      Console.WriteLine("Hello World!");
      Console.WriteLine("Melike");
      Console.WriteLine("16");
      Console.WriteLine(16);

      //Değişken Oluşturma
      //VeriTipi değişkenAdi = degişkenDegeri.
      //VeriTipi değişkenAdi;


      //Sayısal Veri Tipleri
      //sByte max 127 
      //sByte min -127 
      sbyte degiskenBir = 24;

      byte degisken_Iki = 45;

      ushort degisken3 = 127;

      short degiskenDort = -2565;

      int degiskenBes = -154455;

      uint degiskenAlti = 32654565;

      long degiskenYedi = -5545265;

      ulong degisken8 = 545455;

      double degisken9 = 1.4525;
      float ondalikliBir = 1.158F;
      decimal ondalikliIki = 1.445M;

      //Metilsel Veri Tipi 

      // String veri tipi sınırsızdır.
      string isim = "Alper";

      // Char tek karakter tutar.
      char basHarfi = 'A';

      //Mantıksal Veri Tipi 
      // Bool True, False

      bool askerlikDurumu = true;

      //Örnek 1

      string bosMetin = "";
      string uzunMetin = "Buraya öyle uzun bir metin yazılırdı ki kimse gözlerine inanamazdı...";

      Console.WriteLine(bosMetin);
      Console.WriteLine(uzunMetin);


      bool bugunTatilMi = false;
      bool buyukMu = 10 > 2;
    }
  }

//----------------------------------------------------------------

//Static degiskenler...

4 ayrı class şekli ve ayrıca ramin stack heap ve statik bölümlerini gözünün önüne getir.
Değişken static bölümünde bir defa tanımlandığında her alınan instance statikteki değişken sayacını arttırır.
Yani her bir classtan static bölümüne ok gittiğini düşün.

Asker sınıfından t anında ramde ne kadar var?
bir şeyin ne kadar olduğu sayaçla hesaplanabilir.
Asker class ı içinde static int sayac = 0;
ctor içine sayac++ ve cw

ramin static bölgesinde tutulurlar ve tek bir kopyadırlar.
burada sayaç her asker instance ı alınışında bir artar


internal class Asker
    {
        static int sayac = 0;

        public Asker()
        {
            sayac++;
            Console.WriteLine("Sayac=" +sayac);
        }
    }

Asker asker1 = new Asker();
Asker asker2 = new Asker();
Asker asker3 = new Asker();
Asker asker4 = new Asker();
Asker asker5 = new Asker();

       
       
